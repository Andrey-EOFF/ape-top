{"version":3,"file":"static/js/968.801d43e7.chunk.js","mappings":"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","sources":["Components/Buttons/BtnArrow/BtnArrow.styled.jsx","Components/Buttons/BtnArrow/BtnArrow.jsx","Components/Data/MidMapData.jsx","Images/Svg/mind-arrow.svg","Components/MindMap/MindMap.styled.jsx","Components/MindMap/MindMap.jsx","../node_modules/react-swipeable/src/types.ts","../node_modules/react-swipeable/src/index.ts"],"sourcesContent":["import styled from \"styled-components\";\r\nimport { Colors, Utils } from \"../../styles/ConstantStyles\";\r\n\r\n\r\nexport const PrevNextButtons = styled.div`\r\n  display: flex;\r\n  justify-content: space-between;\r\n\r\n  width: 150px;\r\n  margin-top: 24px;\r\n\r\n  margin-left: auto;\r\n  margin-right: auto;\r\n\r\n  button {\r\n    border: none;\r\n    background-color: transparent;\r\n    color: ${Colors.ColorWhite};\r\n    font-family: \"Biro Script Plus Bold US\";\r\n    font-size: 24px;\r\n    font-weight: 400;\r\n    line-height: 1;\r\n    text-align: center;\r\n    transition: ${Utils.transition};\r\n    cursor: pointer;\r\n\r\n    &:hover {\r\n      color: ${Colors.ColorAkcent};\r\n      transform: scale(1.15);\r\n    }\r\n\r\n    &:focus {\r\n      text-shadow: 0 0 5px ${Colors.ColorAkcent};\r\n    }\r\n\r\n    &:disabled {\r\n      color: ${Colors.BtnNotActiveColor};\r\n      pointer-events: none;\r\n    }\r\n  }\r\n`;","import React from \"react\";\r\nimport { PrevNextButtons } from \"./BtnArrow.styled\";\r\n\r\nconst BtnArrow = ({\r\n  handlePrev,\r\n  handleNext,\r\n  currentIndex,\r\n  totalItems,\r\n  slidesPerPage,\r\n}) => {\r\n  const isArts = slidesPerPage !== undefined;\r\n\r\n  return (\r\n    <PrevNextButtons>\r\n      <button onClick={handlePrev} disabled={currentIndex === 0}>\r\n        Prev\r\n      </button>\r\n      <button\r\n        onClick={handleNext}\r\n        disabled={\r\n          isArts\r\n            ? currentIndex === totalItems - slidesPerPage\r\n            : currentIndex === totalItems - 1\r\n        }\r\n      >\r\n        Next\r\n      </button>\r\n    </PrevNextButtons>\r\n  );\r\n};\r\n\r\nexport default BtnArrow;\r\n","export const MIND_MAP_DATA = [\r\n  {\r\n    bgColor: \"#1e1e1e\",\r\n    text: \"All owners of APE NFTs and all future collections will receive a percentage of sales based on the number of NFTs they own\",\r\n    icon: false,\r\n    title: \"YAPE DROP\",\r\n  },\r\n  {\r\n    bgColor: \"#1e1e1e\",\r\n    text: \"Launch of the 2nd YACHT Collection Releasing the first version of the Ape Slam Game\",\r\n    icon: false,\r\n    title: \"New Collection\",\r\n  },\r\n  {\r\n    bgColor: \"#1e1e1e\",\r\n    text: \"Launch your own token, the proceeds of which will go to a global fund to LAUNCH YACHT CLUB AND PROMOTE it\",\r\n    icon: false,\r\n    title: \"Token\",\r\n  },\r\n  {\r\n    bgColor: \"#dc3b5a\",\r\n    text: \"\",\r\n    icon: true,\r\n    title: \"Learn more in mind map\",\r\n    url: \"https://andrey-eoff.github.io/ape-top/\",\r\n  },\r\n];\r\n","var _path;\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nimport * as React from \"react\";\nfunction SvgMindArrow(_ref, svgRef) {\n  let {\n    title,\n    titleId,\n    ...props\n  } = _ref;\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 64,\n    height: 64,\n    viewBox: \"0 0 64 64\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M17.1045 12H51.7712V46.6667H41.1045V30.2093L19.7712 51.5427L12.2288 44.0003L33.5621 22.6667H17.1045V12Z\",\n    fill: \"white\"\n  })));\n}\nconst ForwardRef = /*#__PURE__*/React.forwardRef(SvgMindArrow);\nexport default __webpack_public_path__ + \"static/media/mind-arrow.c5a37981f6c4274bbd7eaba2cbe458d6.svg\";\nexport { ForwardRef as ReactComponent };","import styled from \"styled-components\";\r\nimport { Colors, SizeDev, Utils } from \"../styles/ConstantStyles\";\r\n\r\nimport { ReactComponent as MindSvg } from \"../../Images/Svg/mind-arrow.svg\";\r\n\r\nconst cardSizes = {\r\n  mobile: {\r\n    width: \"216px\",\r\n    height: \"242px\",\r\n  },\r\n  tablet: {\r\n    width: \"284px\",\r\n    height: \"242px\",\r\n  },\r\n  desktop: {\r\n    width: \"504px\",\r\n    height: \"480px\",\r\n  },\r\n};\r\n\r\nexport const MindMapSection = styled.section`\r\n  padding-top: 60px;\r\n\r\n  @media (min-width: ${SizeDev.TAB}) {\r\n    padding-top: 80px;\r\n  }\r\n\r\n  @media (min-width: ${SizeDev.DESK}) {\r\n    padding-top: 120px;\r\n  }\r\n`;\r\n\r\nexport const MindMapTitle = styled.h2`\r\n  margin-bottom: 24px;\r\n\r\n  color: ${Colors.ColorWhite};\r\n\r\n  font-family: \"Right Grotesk Compact\";\r\n  font-size: 44px;\r\n  font-weight: 900;\r\n  line-height: 1;\r\n  text-align: center;\r\n\r\n  @media (min-width: ${SizeDev.TAB}) {\r\n    margin-bottom: 40px;\r\n    font-size: 80px;\r\n    font-weight: 900;\r\n    line-height: 1;\r\n  }\r\n\r\n  @media (min-width: ${SizeDev.DESK}) {\r\n    margin-bottom: 80px;\r\n    font-size: 160px;\r\n    font-weight: 900;\r\n    line-height: 1;\r\n  }\r\n`;\r\n\r\nexport const CardContainer = styled.ul`\r\n  display: grid;\r\n  grid-template-columns: repeat(auto-fill, minmax(242px, 1fr));\r\n\r\n  @media (max-width: ${SizeDev.TAB}) {\r\n    overflow-x: scroll;\r\n    flex-wrap: nowrap;\r\n\r\n    &::-webkit-scrollbar {\r\n      display: none;\r\n    }\r\n  }\r\n\r\n  @media (min-width: ${SizeDev.TAB}) {\r\n    grid-template-columns: repeat(2, 1fr);\r\n    gap: 24px;\r\n  }\r\n`;\r\n\r\nexport const Card = styled.li`\r\n  position: relative;\r\n  display: ${({ isActive }) => (isActive ? \"flex\" : \"none\")};\r\n  flex-direction: column;\r\n  justify-content: space-between;\r\n\r\n  padding: 24px 12px;\r\n  border-radius: 10px;\r\n  color: ${Colors.ColorWhite};\r\n\r\n  transition: ${Utils.transition};\r\n\r\n  &:hover {\r\n    transform: scale(1.03);\r\n  }\r\n\r\n  img {\r\n    width: 24px;\r\n    height: 24px;\r\n  }\r\n  a {\r\n    text-decoration: underline;\r\n  }\r\n\r\n  width: 100%;\r\n  height: ${cardSizes.mobile.height};\r\n\r\n  @media (min-width: ${SizeDev.TAB}) {\r\n    width: ${cardSizes.tablet.width};\r\n    height: ${cardSizes.tablet.height};\r\n    display: flex;\r\n  }\r\n\r\n  @media (min-width: ${SizeDev.DESK}) {\r\n    padding: 24px;\r\n    width: ${cardSizes.desktop.width};\r\n    height: ${cardSizes.desktop.height};\r\n    display: flex;\r\n  }\r\n`;\r\n\r\nexport const CardTitle = styled.h3`\r\n  font-family: \"Right Grotesk Compact\";\r\n  font-size: 32px;\r\n  font-weight: 900;\r\n  line-height: 1;\r\n  text-align: left;\r\n\r\n  @media (min-width: ${SizeDev.DESK}) {\r\n    font-size: 64px;\r\n    font-weight: 900;\r\n    line-height: 1;\r\n    text-align: left;\r\n  }\r\n`;\r\n\r\nexport const CardText = styled.p`\r\n  font-family: \"Messina Sans Mono Regular\";\r\n  font-size: 12px;\r\n  font-weight: 400;\r\n  line-height: 1.17;\r\n  text-transform: uppercase;\r\n\r\n  @media (min-width: ${SizeDev.TAB}) {\r\n    margin-left: 132px;\r\n    width: 128px;\r\n  }\r\n  @media (min-width: ${SizeDev.DESK}) {\r\n    margin-left: 252px;\r\n    width: 228px;\r\n\r\n    font-size: 24px;\r\n    font-weight: 400;\r\n    line-height: 1.2;\r\n    text-align: left;\r\n  }\r\n`;\r\n\r\nexport const MindArrow = styled(MindSvg)`\r\n  position: absolute;\r\n  top: 24px;\r\n  right: 24px;\r\n  width: 24px;\r\n  height: 24px;\r\n  fill: ${Colors.ColorWhite};\r\n\r\n  @media (min-width: ${SizeDev.TAB}) {\r\n    top: 36px;\r\n    right: 36px;\r\n  }\r\n  @media (min-width: ${SizeDev.DESK}) {\r\n    width: 40px;\r\n    height: 40px;\r\n  }\r\n`;\r\n","import React, { useState, useEffect, useCallback } from \"react\";\r\nimport { MIND_MAP_DATA } from \"../Data/MidMapData\";\r\nimport {\r\n  CardContainer,\r\n  Card,\r\n  CardTitle,\r\n  CardText,\r\n  MindMapTitle,\r\n  MindMapSection,\r\n  MindArrow,\r\n} from \"./MindMap.styled\";\r\nimport { useSwipeable } from \"react-swipeable\";\r\nimport { Container } from \"../App/App.styled\";\r\nimport BtnArrow from \"../Buttons/BtnArrow/BtnArrow\";\r\n\r\nconst MindMap = () => {\r\n  const [currentIndex, setCurrentIndex] = useState(0);\r\n  const [isMobile, setIsMobile] = useState(window.innerWidth <= 768);\r\n\r\n  const handlePrev = useCallback(() => {\r\n    setCurrentIndex((prevIndex) =>\r\n      prevIndex === 0 ? prevIndex : prevIndex - 1\r\n    );\r\n  }, [setCurrentIndex]);\r\n\r\n  const handleNext = useCallback(() => {\r\n    setCurrentIndex((prevIndex) =>\r\n      prevIndex === MIND_MAP_DATA.length - 1 ? prevIndex : prevIndex + 1\r\n    );\r\n  }, [setCurrentIndex]);\r\n\r\n  const handlers = useSwipeable({\r\n    onSwipedLeft: handleNext,\r\n    onSwipedRight: handlePrev,\r\n    preventDefaultTouchmoveEvent: true,\r\n    trackMouse: true,\r\n  });\r\n\r\n  useEffect(() => {\r\n    const handleResize = () => {\r\n      setIsMobile(window.innerWidth <= 768);\r\n    };\r\n\r\n    window.addEventListener(\"resize\", handleResize);\r\n\r\n    return () => {\r\n      window.removeEventListener(\"resize\", handleResize);\r\n    };\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    const handleKeyPress = (event) => {\r\n      if (event.key === \"ArrowLeft\") {\r\n        handlePrev();\r\n      } else if (event.key === \"ArrowRight\") {\r\n        handleNext();\r\n      }\r\n    };\r\n\r\n    window.addEventListener(\"keydown\", handleKeyPress);\r\n\r\n    return () => {\r\n      window.removeEventListener(\"keydown\", handleKeyPress);\r\n    };\r\n  }, [handleNext, handlePrev]);\r\n\r\n  return (\r\n    <Container>\r\n      <MindMapSection id=\"mindmap\" {...handlers}>\r\n        <MindMapTitle>MindMap</MindMapTitle>\r\n        <CardContainer>\r\n          {MIND_MAP_DATA.map((item, index) => (\r\n            <a href={item.url} key={index}>\r\n              <Card\r\n                key={index}\r\n                style={{ backgroundColor: item.bgColor }}\r\n                isActive={index === currentIndex}\r\n              >\r\n                <CardText>{item.text}</CardText>\r\n                <CardTitle>{item.title}</CardTitle>\r\n                {item.icon && <MindArrow />}\r\n              </Card>\r\n            </a>\r\n          ))}\r\n        </CardContainer>\r\n        {isMobile && (\r\n          <BtnArrow\r\n            handlePrev={handlePrev}\r\n            handleNext={handleNext}\r\n            currentIndex={currentIndex}\r\n            totalItems={MIND_MAP_DATA.length}\r\n          />\r\n        )}\r\n      </MindMapSection>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default MindMap;\r\n","import * as React from \"react\";\n\nexport const LEFT = \"Left\";\nexport const RIGHT = \"Right\";\nexport const UP = \"Up\";\nexport const DOWN = \"Down\";\nexport type HandledEvents = React.MouseEvent | TouchEvent | MouseEvent;\nexport type Vector2 = [number, number];\nexport type SwipeDirections =\n  | typeof LEFT\n  | typeof RIGHT\n  | typeof UP\n  | typeof DOWN;\nexport interface SwipeEventData {\n  /**\n   * Absolute displacement of swipe in x. Math.abs(deltaX);\n   */\n  absX: number;\n  /**\n   * Absolute displacement of swipe in y. Math.abs(deltaY);\n   */\n  absY: number;\n  /**\n   * Displacement of swipe in x. (current.x - initial.x)\n   */\n  deltaX: number;\n  /**\n   * Displacement of swipe in y. (current.y - initial.y)\n   */\n  deltaY: number;\n  /**\n   * Direction of swipe - Left | Right | Up | Down\n   */\n  dir: SwipeDirections;\n  /**\n   * Source event.\n   */\n  event: HandledEvents;\n  /**\n   * True for the first event of a tracked swipe.\n   */\n  first: boolean;\n  /**\n   * Location where swipe started - [x, y].\n   */\n  initial: Vector2;\n  /**\n   * \"Absolute velocity\" (speed) - √(absX^2 + absY^2) / time\n   */\n  velocity: number;\n  /**\n   * Velocity per axis - [ deltaX/time, deltaY/time ]\n   */\n  vxvy: Vector2;\n}\n\nexport type SwipeCallback = (eventData: SwipeEventData) => void;\nexport type TapCallback = ({ event }: { event: HandledEvents }) => void;\n\nexport type SwipeableDirectionCallbacks = {\n  /**\n   * Called after a DOWN swipe\n   */\n  onSwipedDown: SwipeCallback;\n  /**\n   * Called after a LEFT swipe\n   */\n  onSwipedLeft: SwipeCallback;\n  /**\n   * Called after a RIGHT swipe\n   */\n  onSwipedRight: SwipeCallback;\n  /**\n   * Called after a UP swipe\n   */\n  onSwipedUp: SwipeCallback;\n};\n\nexport type SwipeableCallbacks = SwipeableDirectionCallbacks & {\n  /**\n   * Called at start of a tracked swipe.\n   */\n  onSwipeStart: SwipeCallback;\n  /**\n   * Called after any swipe.\n   */\n  onSwiped: SwipeCallback;\n  /**\n   * Called for each move event during a tracked swipe.\n   */\n  onSwiping: SwipeCallback;\n  /**\n   * Called after a tap. A touch under the min distance, `delta`.\n   */\n  onTap: TapCallback;\n  /**\n   * Called for `touchstart` and `mousedown`.\n   */\n  onTouchStartOrOnMouseDown: TapCallback;\n  /**\n   * Called for `touchend` and `mouseup`.\n   */\n  onTouchEndOrOnMouseUp: TapCallback;\n};\n\n// Configuration Options\nexport type ConfigurationOptionDelta =\n  | number\n  | { [key in Lowercase<SwipeDirections>]?: number };\n\nexport interface ConfigurationOptions {\n  /**\n   * Min distance(px) before a swipe starts. **Default**: `10`\n   */\n  delta: ConfigurationOptionDelta;\n  /**\n   * Prevents scroll during swipe in most cases. **Default**: `false`\n   */\n  preventScrollOnSwipe: boolean;\n  /**\n   * Set a rotation angle. **Default**: `0`\n   */\n  rotationAngle: number;\n  /**\n   * Track mouse input. **Default**: `false`\n   */\n  trackMouse: boolean;\n  /**\n   * Track touch input. **Default**: `true`\n   */\n  trackTouch: boolean;\n  /**\n   * Allowable duration of a swipe (ms). **Default**: `Infinity`\n   */\n  swipeDuration: number;\n  /**\n   * Options for touch event listeners\n   */\n  touchEventOptions: { passive: boolean };\n}\n\nexport type SwipeableProps = Partial<SwipeableCallbacks & ConfigurationOptions>;\n\nexport type SwipeablePropsWithDefaultOptions = Partial<SwipeableCallbacks> &\n  ConfigurationOptions;\n\nexport interface SwipeableHandlers {\n  ref(element: HTMLElement | null): void;\n  onMouseDown?(event: React.MouseEvent): void;\n}\n\nexport type SwipeableState = {\n  cleanUpTouch?: () => void;\n  el?: HTMLElement;\n  eventData?: SwipeEventData;\n  first: boolean;\n  initial: Vector2;\n  start: number;\n  swiping: boolean;\n  xy: Vector2;\n};\n\nexport type StateSetter = (\n  state: SwipeableState,\n  props: SwipeablePropsWithDefaultOptions\n) => SwipeableState;\nexport type Setter = (stateSetter: StateSetter) => void;\nexport type AttachTouch = (\n  el: HTMLElement,\n  props: SwipeablePropsWithDefaultOptions\n) => () => void;\n","/* global document */\nimport * as React from \"react\";\nimport {\n  AttachTouch,\n  SwipeDirections,\n  DOWN,\n  SwipeEventData,\n  HandledEvents,\n  LEFT,\n  RIGHT,\n  Setter,\n  ConfigurationOptions,\n  SwipeableDirectionCallbacks,\n  SwipeableHandlers,\n  SwipeableProps,\n  SwipeablePropsWithDefaultOptions,\n  SwipeableState,\n  SwipeCallback,\n  TapCallback,\n  UP,\n  Vector2,\n} from \"./types\";\n\nexport {\n  LEFT,\n  RIGHT,\n  UP,\n  DOWN,\n  SwipeDirections,\n  SwipeEventData,\n  SwipeableDirectionCallbacks,\n  SwipeCallback,\n  TapCallback,\n  SwipeableHandlers,\n  SwipeableProps,\n  Vector2,\n};\n\nconst defaultProps: ConfigurationOptions = {\n  delta: 10,\n  preventScrollOnSwipe: false,\n  rotationAngle: 0,\n  trackMouse: false,\n  trackTouch: true,\n  swipeDuration: Infinity,\n  touchEventOptions: { passive: true },\n};\nconst initialState: SwipeableState = {\n  first: true,\n  initial: [0, 0],\n  start: 0,\n  swiping: false,\n  xy: [0, 0],\n};\nconst mouseMove = \"mousemove\";\nconst mouseUp = \"mouseup\";\nconst touchEnd = \"touchend\";\nconst touchMove = \"touchmove\";\nconst touchStart = \"touchstart\";\n\nfunction getDirection(\n  absX: number,\n  absY: number,\n  deltaX: number,\n  deltaY: number\n): SwipeDirections {\n  if (absX > absY) {\n    if (deltaX > 0) {\n      return RIGHT;\n    }\n    return LEFT;\n  } else if (deltaY > 0) {\n    return DOWN;\n  }\n  return UP;\n}\n\nfunction rotateXYByAngle(pos: Vector2, angle: number): Vector2 {\n  if (angle === 0) return pos;\n  const angleInRadians = (Math.PI / 180) * angle;\n  const x =\n    pos[0] * Math.cos(angleInRadians) + pos[1] * Math.sin(angleInRadians);\n  const y =\n    pos[1] * Math.cos(angleInRadians) - pos[0] * Math.sin(angleInRadians);\n  return [x, y];\n}\n\nfunction getHandlers(\n  set: Setter,\n  handlerProps: { trackMouse: boolean | undefined }\n): [\n  {\n    ref: (element: HTMLElement | null) => void;\n    onMouseDown?: (event: React.MouseEvent) => void;\n  },\n  AttachTouch\n] {\n  const onStart = (event: HandledEvents) => {\n    const isTouch = \"touches\" in event;\n    // if more than a single touch don't track, for now...\n    if (isTouch && event.touches.length > 1) return;\n\n    set((state, props) => {\n      // setup mouse listeners on document to track swipe since swipe can leave container\n      if (props.trackMouse && !isTouch) {\n        document.addEventListener(mouseMove, onMove);\n        document.addEventListener(mouseUp, onUp);\n      }\n      const { clientX, clientY } = isTouch ? event.touches[0] : event;\n      const xy = rotateXYByAngle([clientX, clientY], props.rotationAngle);\n\n      props.onTouchStartOrOnMouseDown &&\n        props.onTouchStartOrOnMouseDown({ event });\n\n      return {\n        ...state,\n        ...initialState,\n        initial: xy.slice() as Vector2,\n        xy,\n        start: event.timeStamp || 0,\n      };\n    });\n  };\n\n  const onMove = (event: HandledEvents) => {\n    set((state, props) => {\n      const isTouch = \"touches\" in event;\n      // Discount a swipe if additional touches are present after\n      // a swipe has started.\n      if (isTouch && event.touches.length > 1) {\n        return state;\n      }\n\n      // if swipe has exceeded duration stop tracking\n      if (event.timeStamp - state.start > props.swipeDuration) {\n        return state.swiping ? { ...state, swiping: false } : state;\n      }\n\n      const { clientX, clientY } = isTouch ? event.touches[0] : event;\n      const [x, y] = rotateXYByAngle([clientX, clientY], props.rotationAngle);\n      const deltaX = x - state.xy[0];\n      const deltaY = y - state.xy[1];\n      const absX = Math.abs(deltaX);\n      const absY = Math.abs(deltaY);\n      const time = (event.timeStamp || 0) - state.start;\n      const velocity = Math.sqrt(absX * absX + absY * absY) / (time || 1);\n      const vxvy: Vector2 = [deltaX / (time || 1), deltaY / (time || 1)];\n\n      const dir = getDirection(absX, absY, deltaX, deltaY);\n\n      // if swipe is under delta and we have not started to track a swipe: skip update\n      const delta =\n        typeof props.delta === \"number\"\n          ? props.delta\n          : props.delta[dir.toLowerCase() as Lowercase<SwipeDirections>] ||\n            defaultProps.delta;\n      if (absX < delta && absY < delta && !state.swiping) return state;\n\n      const eventData = {\n        absX,\n        absY,\n        deltaX,\n        deltaY,\n        dir,\n        event,\n        first: state.first,\n        initial: state.initial,\n        velocity,\n        vxvy,\n      };\n\n      // call onSwipeStart if present and is first swipe event\n      eventData.first && props.onSwipeStart && props.onSwipeStart(eventData);\n\n      // call onSwiping if present\n      props.onSwiping && props.onSwiping(eventData);\n\n      // track if a swipe is cancelable (handler for swiping or swiped(dir) exists)\n      // so we can call preventDefault if needed\n      let cancelablePageSwipe = false;\n      if (\n        props.onSwiping ||\n        props.onSwiped ||\n        props[`onSwiped${dir}` as keyof SwipeableDirectionCallbacks]\n      ) {\n        cancelablePageSwipe = true;\n      }\n\n      if (\n        cancelablePageSwipe &&\n        props.preventScrollOnSwipe &&\n        props.trackTouch &&\n        event.cancelable\n      ) {\n        event.preventDefault();\n      }\n\n      return {\n        ...state,\n        // first is now always false\n        first: false,\n        eventData,\n        swiping: true,\n      };\n    });\n  };\n\n  const onEnd = (event: HandledEvents) => {\n    set((state, props) => {\n      let eventData: SwipeEventData | undefined;\n      if (state.swiping && state.eventData) {\n        // if swipe is less than duration fire swiped callbacks\n        if (event.timeStamp - state.start < props.swipeDuration) {\n          eventData = { ...state.eventData, event };\n          props.onSwiped && props.onSwiped(eventData);\n\n          const onSwipedDir =\n            props[\n              `onSwiped${eventData.dir}` as keyof SwipeableDirectionCallbacks\n            ];\n          onSwipedDir && onSwipedDir(eventData);\n        }\n      } else {\n        props.onTap && props.onTap({ event });\n      }\n\n      props.onTouchEndOrOnMouseUp && props.onTouchEndOrOnMouseUp({ event });\n\n      return { ...state, ...initialState, eventData };\n    });\n  };\n\n  const cleanUpMouse = () => {\n    // safe to just call removeEventListener\n    document.removeEventListener(mouseMove, onMove);\n    document.removeEventListener(mouseUp, onUp);\n  };\n\n  const onUp = (e: HandledEvents) => {\n    cleanUpMouse();\n    onEnd(e);\n  };\n\n  /**\n   * The value of passive on touchMove depends on `preventScrollOnSwipe`:\n   * - true => { passive: false }\n   * - false => { passive: true } // Default\n   *\n   * NOTE: When preventScrollOnSwipe is true, we attempt to call preventDefault to prevent scroll.\n   *\n   * props.touchEventOptions can also be set for all touch event listeners,\n   * but for `touchmove` specifically when `preventScrollOnSwipe` it will\n   * supersede and force passive to false.\n   *\n   */\n  const attachTouch: AttachTouch = (el, props) => {\n    let cleanup = () => {};\n    if (el && el.addEventListener) {\n      const baseOptions = {\n        ...defaultProps.touchEventOptions,\n        ...props.touchEventOptions,\n      };\n      // attach touch event listeners and handlers\n      const tls: [\n        typeof touchStart | typeof touchMove | typeof touchEnd,\n        (e: HandledEvents) => void,\n        { passive: boolean }\n      ][] = [\n        [touchStart, onStart, baseOptions],\n        // preventScrollOnSwipe option supersedes touchEventOptions.passive\n        [\n          touchMove,\n          onMove,\n          {\n            ...baseOptions,\n            ...(props.preventScrollOnSwipe ? { passive: false } : {}),\n          },\n        ],\n        [touchEnd, onEnd, baseOptions],\n      ];\n      tls.forEach(([e, h, o]) => el.addEventListener(e, h, o));\n      // return properly scoped cleanup method for removing listeners, options not required\n      cleanup = () => tls.forEach(([e, h]) => el.removeEventListener(e, h));\n    }\n    return cleanup;\n  };\n\n  const onRef = (el: HTMLElement | null) => {\n    // \"inline\" ref functions are called twice on render, once with null then again with DOM element\n    // ignore null here\n    if (el === null) return;\n    set((state, props) => {\n      // if the same DOM el as previous just return state\n      if (state.el === el) return state;\n\n      const addState: { cleanUpTouch?: () => void } = {};\n      // if new DOM el clean up old DOM and reset cleanUpTouch\n      if (state.el && state.el !== el && state.cleanUpTouch) {\n        state.cleanUpTouch();\n        addState.cleanUpTouch = void 0;\n      }\n      // only attach if we want to track touch\n      if (props.trackTouch && el) {\n        addState.cleanUpTouch = attachTouch(el, props);\n      }\n\n      // store event attached DOM el for comparison, clean up, and re-attachment\n      return { ...state, el, ...addState };\n    });\n  };\n\n  // set ref callback to attach touch event listeners\n  const output: { ref: typeof onRef; onMouseDown?: typeof onStart } = {\n    ref: onRef,\n  };\n\n  // if track mouse attach mouse down listener\n  if (handlerProps.trackMouse) {\n    output.onMouseDown = onStart;\n  }\n\n  return [output, attachTouch];\n}\n\nfunction updateTransientState(\n  state: SwipeableState,\n  props: SwipeablePropsWithDefaultOptions,\n  previousProps: SwipeablePropsWithDefaultOptions,\n  attachTouch: AttachTouch\n) {\n  // if trackTouch is off or there is no el, then remove handlers if necessary and exit\n  if (!props.trackTouch || !state.el) {\n    if (state.cleanUpTouch) {\n      state.cleanUpTouch();\n    }\n\n    return {\n      ...state,\n      cleanUpTouch: undefined,\n    };\n  }\n\n  // trackTouch is on, so if there are no handlers attached, attach them and exit\n  if (!state.cleanUpTouch) {\n    return {\n      ...state,\n      cleanUpTouch: attachTouch(state.el, props),\n    };\n  }\n\n  // trackTouch is on and handlers are already attached, so if preventScrollOnSwipe changes value,\n  // remove and reattach handlers (this is required to update the passive option when attaching\n  // the handlers)\n  if (\n    props.preventScrollOnSwipe !== previousProps.preventScrollOnSwipe ||\n    props.touchEventOptions.passive !== previousProps.touchEventOptions.passive\n  ) {\n    state.cleanUpTouch();\n\n    return {\n      ...state,\n      cleanUpTouch: attachTouch(state.el, props),\n    };\n  }\n\n  return state;\n}\n\nexport function useSwipeable(options: SwipeableProps): SwipeableHandlers {\n  const { trackMouse } = options;\n  const transientState = React.useRef({ ...initialState });\n  const transientProps = React.useRef<SwipeablePropsWithDefaultOptions>({\n    ...defaultProps,\n  });\n\n  // track previous rendered props\n  const previousProps = React.useRef<SwipeablePropsWithDefaultOptions>({\n    ...transientProps.current,\n  });\n  previousProps.current = { ...transientProps.current };\n\n  // update current render props & defaults\n  transientProps.current = {\n    ...defaultProps,\n    ...options,\n  };\n  // Force defaults for config properties\n  let defaultKey: keyof ConfigurationOptions;\n  for (defaultKey in defaultProps) {\n    if (transientProps.current[defaultKey] === void 0) {\n      (transientProps.current[defaultKey] as any) = defaultProps[defaultKey];\n    }\n  }\n\n  const [handlers, attachTouch] = React.useMemo(\n    () =>\n      getHandlers(\n        (stateSetter) =>\n          (transientState.current = stateSetter(\n            transientState.current,\n            transientProps.current\n          )),\n        { trackMouse }\n      ),\n    [trackMouse]\n  );\n\n  transientState.current = updateTransientState(\n    transientState.current,\n    transientProps.current,\n    previousProps.current,\n    attachTouch\n  );\n\n  return handlers;\n}\n"],"names":["PrevNextButtons","styled","div","_templateObject","_taggedTemplateLiteral","Colors","ColorWhite","Utils","transition","ColorAkcent","BtnNotActiveColor","_ref","handlePrev","handleNext","currentIndex","totalItems","slidesPerPage","isArts","undefined","_jsxs","children","_jsx","onClick","disabled","MIND_MAP_DATA","bgColor","text","icon","title","url","_path","_extends","Object","assign","bind","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","this","SvgMindArrow","svgRef","titleId","props","width","height","viewBox","fill","xmlns","ref","id","d","ForwardRef","cardSizes","MindMapSection","section","SizeDev","TAB","DESK","MindMapTitle","h2","_templateObject2","CardContainer","ul","_templateObject3","Card","li","_templateObject4","isActive","CardTitle","h3","_templateObject5","CardText","p","_templateObject6","MindArrow","MindSvg","_templateObject7","MindMap","setCurrentIndex","useState","isMobile","setIsMobile","window","innerWidth","useCallback","prevIndex","handlers","useSwipeable","onSwipedLeft","onSwipedRight","preventDefaultTouchmoveEvent","trackMouse","useEffect","handleResize","addEventListener","removeEventListener","handleKeyPress","event","Container","map","item","index","href","style","backgroundColor","BtnArrow","LEFT","RIGHT","UP","DOWN","defaultProps","delta","preventScrollOnSwipe","rotationAngle","trackTouch","swipeDuration","Infinity","touchEventOptions","passive","initialState","first","initial","start","swiping","xy","mouseMove","mouseUp","touchEnd","touchMove","touchStart","rotateXYByAngle","pos","angle","angleInRadians","Math","PI","cos","sin","getHandlers","set","handlerProps","onStart","isTouch","touches","state","document","onMove","onUp","clientX","clientY","onTouchStartOrOnMouseDown","slice","timeStamp","x","y","deltaX","deltaY","absX","abs","absY","time","velocity","sqrt","vxvy","dir","getDirection","toLowerCase","eventData","onSwipeStart","onSwiping","cancelablePageSwipe","onSwiped","concat","cancelable","preventDefault","onEnd","onSwipedDir","onTap","onTouchEndOrOnMouseUp","e","attachTouch","el","cleanup","baseOptions","tls","forEach","h","o","_ref2","output","addState","cleanUpTouch","onMouseDown","options","transientState","React","transientProps","previousProps","current","defaultKey","stateSetter","updateTransientState"],"sourceRoot":""}